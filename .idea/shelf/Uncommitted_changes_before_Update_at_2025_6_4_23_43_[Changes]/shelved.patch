Index: services/service-order/src/main/resources/application.properties
===================================================================
diff --git a/services/service-order/src/main/resources/application.properties b/services/service-order/src/main/resources/application.properties
deleted file mode 100644
--- a/services/service-order/src/main/resources/application.properties	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ /dev/null	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
@@ -1,4 +0,0 @@
-spring.application.name=service-order
-server.port=8000
-spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
-spring.config.import=nacos:order.properties
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1749051707275)
+++ b/.idea/vcs.xml	(date 1749051707275)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1749051739307)
+++ b/.idea/encodings.xml	(date 1749051739307)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/model/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/service/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/services/service-order/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/services/service-product/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/services/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/services/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: services/service-order/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/target/classes/application.yml b/services/service-order/target/classes/application.yml
new file mode 100644
--- /dev/null	(date 1749051739265)
+++ b/services/service-order/target/classes/application.yml	(date 1749051739265)
@@ -0,0 +1,48 @@
+server:
+  port: 8000
+spring:
+  profiles:
+    active: test
+    include: feign
+  application:
+    name: service-order
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      config:
+#        禁用导入检查
+        import-check:
+          enabled: false
+        namespace: ${spring.profiles.active:public}
+
+
+logging:
+  level:
+    com.example.order.feign: debug
+
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+#      - nacos:database.properties?group=order
+    activate:
+      on-profile: dev
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+#      - nacos:database.properties?group=order
+#      - nacos:haha.properties?group=order
+    activate:
+      on-profile: test
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+      - nacos:database.properties?group=order
+      - nacos:hehe.properties?group=order
+    activate:
+      on-profile: prod
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1749051707274)
+++ b/.idea/jarRepositories.xml	(date 1749051707274)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="http://maven.aliyun.com/nexus/content/repositories/central/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: services/service-order/target/classes/application-feign.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/target/classes/application-feign.yml b/services/service-order/target/classes/application-feign.yml
new file mode 100644
--- /dev/null	(date 1749051739269)
+++ b/services/service-order/target/classes/application-feign.yml	(date 1749051739269)
@@ -0,0 +1,13 @@
+spring:
+  cloud:
+    openfeign:
+      client:
+        config:
+          default:
+            connectTimeout: 2000
+            readTimeout: 1000
+            loggerLevel: full
+          service11-product:
+            connectTimeout: 2000
+            readTimeout: 10000
+            loggerLevel: full
\ No newline at end of file
Index: services/service-product/src/main/java/com/example/product/service/impl/ProductServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.product.service.impl;\r\n\r\nimport com.example.model.bean.Product;\r\nimport com.example.product.service.ProductService;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.math.BigDecimal;\r\n\r\n@Service\r\npublic class ProductServiceImpl implements ProductService {\r\n\r\n    private static final Logger log = LoggerFactory.getLogger(ProductServiceImpl.class);\r\n\r\n    @Override\r\n    public Product getProduct(Long productId) {\r\n        log.info(\"服务已被调用\");\r\n        Product product = new Product();\r\n        product.setId(0L);\r\n        product.setNum(2);\r\n        product.setName(\"apple: \"+productId);\r\n        product.setPrice(new BigDecimal(\"100.00\"));\r\n        return product;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-product/src/main/java/com/example/product/service/impl/ProductServiceImpl.java b/services/service-product/src/main/java/com/example/product/service/impl/ProductServiceImpl.java
--- a/services/service-product/src/main/java/com/example/product/service/impl/ProductServiceImpl.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-product/src/main/java/com/example/product/service/impl/ProductServiceImpl.java	(date 1749051739281)
@@ -7,6 +7,7 @@
 import org.springframework.stereotype.Service;
 
 import java.math.BigDecimal;
+import java.util.concurrent.TimeUnit;
 
 @Service
 public class ProductServiceImpl implements ProductService {
@@ -14,13 +15,18 @@
     private static final Logger log = LoggerFactory.getLogger(ProductServiceImpl.class);
 
     @Override
-    public Product getProduct(Long productId) {
+    public Product getProduct(Long productId)  {
         log.info("服务已被调用");
         Product product = new Product();
         product.setId(0L);
         product.setNum(2);
         product.setName("apple: "+productId);
         product.setPrice(new BigDecimal("100.00"));
+        try {
+            TimeUnit.SECONDS.sleep(6);
+        } catch (InterruptedException e) {
+            throw new RuntimeException(e);
+        }
         return product;
     }
 }
Index: services/service-product/src/main/java/com/example/product/service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.product.service;\r\n\r\nimport com.example.model.bean.Product;\r\n\r\npublic interface ProductService {\r\n    Product getProduct(Long productId);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-product/src/main/java/com/example/product/service/ProductService.java b/services/service-product/src/main/java/com/example/product/service/ProductService.java
--- a/services/service-product/src/main/java/com/example/product/service/ProductService.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-product/src/main/java/com/example/product/service/ProductService.java	(date 1749051739286)
@@ -3,5 +3,5 @@
 import com.example.model.bean.Product;
 
 public interface ProductService {
-    Product getProduct(Long productId);
+    Product getProduct(Long productId) ;
 }
Index: services/service-order/src/main/java/com/example/order/feign/ProductFeignClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/feign/ProductFeignClient.java b/services/service-order/src/main/java/com/example/order/feign/ProductFeignClient.java
new file mode 100644
--- /dev/null	(date 1749051739232)
+++ b/services/service-order/src/main/java/com/example/order/feign/ProductFeignClient.java	(date 1749051739232)
@@ -0,0 +1,12 @@
+package com.example.order.feign;
+
+import com.example.model.bean.Product;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+
+@FeignClient(value = "service-product")
+public interface ProductFeignClient {
+    @GetMapping("/product/{id}")
+    Product getProduct(@PathVariable("id") Long productId);
+}
Index: services/service-order/src/main/java/com/example/order/service/impl/OrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.order.service.impl;\r\n\r\nimport com.alibaba.nacos.shaded.com.google.common.collect.Lists;\r\nimport com.example.model.bean.Order;\r\nimport com.example.model.bean.Product;\r\nimport com.example.order.service.OrderService;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport netscape.javascript.JSObject;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.cloud.client.ServiceInstance;\r\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\r\nimport org.springframework.cloud.client.loadbalancer.LoadBalancerClient;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n@Slf4j\r\n@Service\r\npublic class OrderServiceImpl implements OrderService {\r\n    @Autowired\r\n    private DiscoveryClient discoveryClient;\r\n    @Autowired\r\n    private RestTemplate restTemplate;\r\n    @Autowired\r\n    private LoadBalancerClient loadBalancerClient;\r\n    @Override\r\n    public Order getOrder(Long userId, Long productId) {\r\n        Product product = getProduct(productId);\r\n\r\n        Order order = new Order();\r\n        order.setId(1L);\r\n        order.setTotalAmount(product.getPrice().multiply(new BigDecimal(product.getNum())));\r\n        order.setNickName(\"菠萝吹雪\");\r\n        order.setAddress(\"花果山\");\r\n        order.setProductList(Arrays.asList(product));\r\n        order.setUserId(userId);\r\n        return order;\r\n    }\r\n\r\n    public Product getProduct(Long productId) {\r\n        //List<ServiceInstance> instances = discoveryClient.getInstances(\"service-product\");\r\n        //ServiceInstance choose = loadBalancerClient.choose(\"service-product\");\r\n        String url= String.format(\"http://service-product\"+\"/product/%s\", productId);\r\n        log.info(\"远程调用url:{}\",url);\r\n        Product product = restTemplate.getForObject(url, Product.class);\r\n        log.info(\"订单信息\"+product.toString());\r\n        return product;\r\n    };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/service/impl/OrderServiceImpl.java b/services/service-order/src/main/java/com/example/order/service/impl/OrderServiceImpl.java
--- a/services/service-order/src/main/java/com/example/order/service/impl/OrderServiceImpl.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-order/src/main/java/com/example/order/service/impl/OrderServiceImpl.java	(date 1749051739245)
@@ -3,6 +3,7 @@
 import com.alibaba.nacos.shaded.com.google.common.collect.Lists;
 import com.example.model.bean.Order;
 import com.example.model.bean.Product;
+import com.example.order.feign.ProductFeignClient;
 import com.example.order.service.OrderService;
 import lombok.extern.slf4j.Slf4j;
 import netscape.javascript.JSObject;
@@ -26,10 +27,12 @@
     private RestTemplate restTemplate;
     @Autowired
     private LoadBalancerClient loadBalancerClient;
+    @Autowired
+    private ProductFeignClient productFeignClient;
     @Override
     public Order getOrder(Long userId, Long productId) {
-        Product product = getProduct(productId);
-
+//        Product product = getProduct(productId);
+        Product product = productFeignClient.getProduct(productId);
         Order order = new Order();
         order.setId(1L);
         order.setTotalAmount(product.getPrice().multiply(new BigDecimal(product.getNum())));
Index: services/service-order/src/main/java/com/example/order/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.order.controller;\r\n\r\nimport com.example.model.bean.Order;\r\nimport com.example.model.bean.Product;\r\nimport com.example.order.properties.OrderProperties;\r\nimport com.example.order.service.OrderService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.cloud.client.ServiceInstance;\r\nimport org.springframework.cloud.client.discovery.DiscoveryClient;\r\nimport org.springframework.cloud.context.config.annotation.RefreshScope;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.RequestParam;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\n@RefreshScope\r\n@RestController\r\npublic class OrderController {\r\n    @Autowired\r\n    private OrderService orderService;\r\n    @Autowired\r\n    private DiscoveryClient discoveryClient;\r\n    @Autowired\r\n    private RestTemplate restTemplate;\r\n    @Autowired\r\n    private OrderProperties orderProperties;\r\n\r\n    //创建订单\r\n    @GetMapping(\"/create\")\r\n    public Order getOrder(@RequestParam(\"userId\") Long userId, @RequestParam(\"productId\") Long productId) {\r\n        Order order = orderService.getOrder(userId, productId);\r\n        return order;\r\n    }\r\n\r\n    //创建订单\r\n    @GetMapping(\"/config\")\r\n    public String getConfig() {\r\n\r\n        return \"userName\" + orderProperties.getName() + \"userPassword\" + orderProperties.getPassword();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/controller/OrderController.java b/services/service-order/src/main/java/com/example/order/controller/OrderController.java
--- a/services/service-order/src/main/java/com/example/order/controller/OrderController.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-order/src/main/java/com/example/order/controller/OrderController.java	(date 1749051739221)
@@ -33,11 +33,11 @@
         return order;
     }
 
-    //创建订单
+
     @GetMapping("/config")
     public String getConfig() {
 
-        return "userName" + orderProperties.getName() + "userPassword" + orderProperties.getPassword();
+        return "userName: " + orderProperties.getName() + " userPassword: " + orderProperties.getPassword() + " env： " + orderProperties.getEnv();
     }
 
 
Index: services/service-order/src/main/java/com/example/order/OrderMainApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.order;\r\n\r\nimport com.alibaba.cloud.nacos.NacosConfigManager;\r\nimport com.alibaba.nacos.api.config.ConfigService;\r\nimport com.alibaba.nacos.api.config.listener.Listener;\r\nimport org.springframework.boot.ApplicationRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\nimport java.util.concurrent.Executor;\r\nimport java.util.concurrent.Executors;\r\n\r\n@EnableDiscoveryClient //服务发现\r\n@SpringBootApplication\r\npublic class OrderMainApplication {\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(OrderMainApplication.class, args);\r\n        System.out.print(\"start successfully!\");\r\n    }\r\n\r\n    /**\r\n     * 动态监听配置变化信息\r\n     * @param nacosConfigManager\r\n     * @return\r\n     */\r\n    @Bean\r\n    public ApplicationRunner applicationRunner(NacosConfigManager nacosConfigManager){\r\n        return args -> {\r\n            ConfigService configService = nacosConfigManager.getConfigService();\r\n            configService.addListener(\"order.properties\", \"DEFAULT_GROUP\", new Listener() {\r\n                @Override\r\n                public Executor getExecutor() {\r\n                   return Executors.newFixedThreadPool(4);\r\n                }\r\n\r\n                @Override\r\n                public void receiveConfigInfo(String s) {\r\n                    System.out.printf(\"变化的配置信息： \"+s);\r\n                }\r\n            });\r\n            System.out.printf(\"ApplicationRunner start successfully!\");\r\n        };\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/OrderMainApplication.java b/services/service-order/src/main/java/com/example/order/OrderMainApplication.java
--- a/services/service-order/src/main/java/com/example/order/OrderMainApplication.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-order/src/main/java/com/example/order/OrderMainApplication.java	(date 1749051739249)
@@ -7,11 +7,13 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.openfeign.EnableFeignClients;
 import org.springframework.context.annotation.Bean;
 
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
 
+@EnableFeignClients
 @EnableDiscoveryClient //服务发现
 @SpringBootApplication
 public class OrderMainApplication {
Index: services/service-order/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/resources/application.yml b/services/service-order/src/main/resources/application.yml
new file mode 100644
--- /dev/null	(date 1749051739257)
+++ b/services/service-order/src/main/resources/application.yml	(date 1749051739257)
@@ -0,0 +1,48 @@
+server:
+  port: 8000
+spring:
+  profiles:
+    active: test
+    include: feign
+  application:
+    name: service-order
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      config:
+#        禁用导入检查
+        import-check:
+          enabled: false
+        namespace: ${spring.profiles.active:public}
+
+
+logging:
+  level:
+    com.example.order.feign: debug
+
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+#      - nacos:database.properties?group=order
+    activate:
+      on-profile: dev
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+#      - nacos:database.properties?group=order
+#      - nacos:haha.properties?group=order
+    activate:
+      on-profile: test
+---
+spring:
+  config:
+    import:
+      - nacos:common.properties?group=order
+      - nacos:database.properties?group=order
+      - nacos:hehe.properties?group=order
+    activate:
+      on-profile: prod
\ No newline at end of file
Index: services/service-order/src/main/java/com/example/order/config/OrderConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.order.config;\r\n\r\nimport feign.RequestTemplate;\r\nimport org.springframework.cloud.client.loadbalancer.LoadBalanced;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\n@Configuration\r\npublic class OrderConfig {\r\n    @LoadBalanced\r\n    @Bean\r\n    public RestTemplate restTemplate() {\r\n        return new RestTemplate();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/config/OrderConfig.java b/services/service-order/src/main/java/com/example/order/config/OrderConfig.java
--- a/services/service-order/src/main/java/com/example/order/config/OrderConfig.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-order/src/main/java/com/example/order/config/OrderConfig.java	(date 1749051739206)
@@ -1,5 +1,6 @@
 package com.example.order.config;
 
+import feign.Logger;
 import feign.RequestTemplate;
 import org.springframework.cloud.client.loadbalancer.LoadBalanced;
 import org.springframework.context.annotation.Bean;
@@ -13,4 +14,8 @@
     public RestTemplate restTemplate() {
         return new RestTemplate();
     }
-}
+
+    @Bean
+    Logger.Level feignLoggerLevel() {
+        return Logger.Level.FULL;
+    }}
Index: services/service-order/src/main/resources/application-feign.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/resources/application-feign.yml b/services/service-order/src/main/resources/application-feign.yml
new file mode 100644
--- /dev/null	(date 1749051739262)
+++ b/services/service-order/src/main/resources/application-feign.yml	(date 1749051739262)
@@ -0,0 +1,13 @@
+spring:
+  cloud:
+    openfeign:
+      client:
+        config:
+          default:
+            connectTimeout: 2000
+            readTimeout: 1000
+            loggerLevel: full
+          service-product:
+            connectTimeout: 2000
+            readTimeout: 10000
+            loggerLevel: full
\ No newline at end of file
Index: services/service-product/src/main/java/com/example/product/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.product.controller;\r\n\r\nimport com.example.model.bean.Product;\r\nimport com.example.product.service.ProductService;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\npublic class ProductController {\r\n    @Autowired\r\n    private ProductService productService;\r\n\r\n    @GetMapping(\"/product/{id}\")\r\n    public Product getProduct(@PathVariable(\"id\") Long productId) {\r\n        Product product = productService.getProduct(productId);\r\n        return product;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-product/src/main/java/com/example/product/controller/ProductController.java b/services/service-product/src/main/java/com/example/product/controller/ProductController.java
--- a/services/service-product/src/main/java/com/example/product/controller/ProductController.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-product/src/main/java/com/example/product/controller/ProductController.java	(date 1749051739274)
@@ -13,7 +13,7 @@
     private ProductService productService;
 
     @GetMapping("/product/{id}")
-    public Product getProduct(@PathVariable("id") Long productId) {
+    public Product getProduct(@PathVariable("id") Long productId)  {
         Product product = productService.getProduct(productId);
         return product;
     }
Index: ../README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../README.md b/../README.md
new file mode 100644
--- /dev/null	(date 1749051771675)
+++ b/../README.md	(date 1749051771675)
@@ -0,0 +1,1 @@
+# springcloud-demo
\ No newline at end of file
Index: ../demo/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../demo/.idea/workspace.xml b/../demo/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1749051739321)
+++ b/../demo/.idea/workspace.xml	(date 1749051739321)
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="b371af39-ae14-44b6-801d-a661b7bb1b1c" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 5
+}]]></component>
+  <component name="ProjectId" id="2x5uV2MDQ3o5o7k49QQTL18zj89" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "master",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "D:/Code/SpringCloud",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
+  }
+}]]></component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.17011.79" />
+        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.17011.79" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="b371af39-ae14-44b6-801d-a661b7bb1b1c" name="Changes" comment="" />
+      <created>1747240277835</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1747240277835</updated>
+      <workItem from="1747240278860" duration="180000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1749051739316)
+++ b/.idea/uiDesigner.xml	(date 1749051739316)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
--- /dev/null	(date 1749051739294)
+++ b/.idea/codeStyles/codeStyleConfig.xml	(date 1749051739294)
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1749051739303)
+++ b/.idea/compiler.xml	(date 1749051739303)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="service-order" />
+        <module name="service-product" />
+        <module name="model" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="service" target="17" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="model" options="-parameters" />
+      <module name="service" options="-parameters" />
+      <module name="service-order" options="-parameters" />
+      <module name="service-product" options="-parameters" />
+      <module name="services" options="" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: services/service-order/src/main/java/com/example/order/properties/OrderProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.order.properties;\r\n\r\nimport lombok.Data;\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Component\r\n@ConfigurationProperties(prefix = \"user\")\r\n@Data\r\npublic class OrderProperties {\r\n    private String name;\r\n    private String password;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/services/service-order/src/main/java/com/example/order/properties/OrderProperties.java b/services/service-order/src/main/java/com/example/order/properties/OrderProperties.java
--- a/services/service-order/src/main/java/com/example/order/properties/OrderProperties.java	(revision d6a0dff45f9724c14548ad266107391d373b7b3b)
+++ b/services/service-order/src/main/java/com/example/order/properties/OrderProperties.java	(date 1749051739237)
@@ -5,9 +5,10 @@
 import org.springframework.stereotype.Component;
 
 @Component
-@ConfigurationProperties(prefix = "user")
+@ConfigurationProperties(prefix = "order")
 @Data
 public class OrderProperties {
     private String name;
     private String password;
+    private String env;
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1749051739312)
+++ b/.idea/misc.xml	(date 1749051739312)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+    <option name="ignoredFiles">
+      <set>
+        <option value="$PROJECT_DIR$/service/pom.xml" />
+      </set>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1749051739298)
+++ b/.idea/.gitignore	(date 1749051739298)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/services/service-product/src/main/resources/application.properties b/services/service-product/target/classes/application.properties
rename from services/service-product/src/main/resources/application.properties
rename to services/service-product/target/classes/application.properties
